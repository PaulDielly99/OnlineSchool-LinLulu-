from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command, CommandStart
from aiogram import Router, F 
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import chat_id

import app.keyboards as kb



router = Router()                           #–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ 

class Trial_EN(StatesGroup):                #–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    language = State()
    level = State()
    aim = State()
    exp = State()
    memory = State()


class Trial_Ch(StatesGroup):             #–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    language = State()
    level = State()
    aim = State()
    exp = State()
    memory = State()    
   

@router.message(CommandStart())                        #—Å—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã /start
@router.callback_query(F.data == 'to_main')             
async def start(message: Message | CallbackQuery):
    if isinstance(message, Message):
        await message.answer_sticker(f'CAACAgIAAxkBAAJGtWXwj6o_NK8AAX86IuLH_L_LFYIs3QACqQgAAm4y2AABGXPOIvVr7iA0BA')   
        await message.answer(f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç!üëã\n'
                            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—É Lin Luluüí´'
                            '–ß–µ–º —è —Ç–µ–±–µ –º–æ–≥—É –ø–æ–º–æ—á—å?üòá', reply_markup=kb.main)
        
    else:
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        await message.message.edit_text(f'{message.from_user.first_name}, –ø—Ä–∏–≤–µ—Ç!üëã\n'
                                '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—É Lin Luluüí´'
                                '–ß–µ–º —è —Ç–µ–±–µ –º–æ–≥—É –ø–æ–º–æ—á—å?üòá', reply_markup=kb.main)
        
@router.callback_query(F.data=='trial')
async def trial(callback: CallbackQuery):
    
    await callback.answer()
    await callback.message.edit_text(f'–≠—Ç–æ –∫—Ä—É—Ç–æ!üî• –ê –Ω–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ —Ç—ã —Ö–æ—á–µ—à—å'
                                    '–∑–∞–ø–∏—Å–∞—Ç—å—Å—è?',reply_markup=kb.select_language)
       

@router.callback_query(F.data == 'en')
async def en(callback: CallbackQuery,state: FSMContext):
    await state.update_data(language=en)
    await state.set_state(Trial_EN.level)
    await callback.answer()
    await callback.message.edit_text('–ö–∞–∫–æ–π —É –í–∞—Å —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π?üß†',reply_markup=kb.level)
    

@router.callback_query(F.data == 'ch')
async def ch(callback: CallbackQuery, state: FSMContext):
    await state.update_data(language = ch)
    await state.set_state(Trial_Ch.level)
    await callback.answer()
    await callback.message.edit_text('–ö–∞–∫–æ–π —É –í–∞—Å —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π?üß†',reply_markup=kb.level)
          


@router.callback_query(Trial_EN.level)
async def level(callback: CallbackQuery, state: FSMContext):   
    await callback.bot.send_message(chat_id, f'{callback.from_user.full_name} ‚ù§Ô∏èüî• —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫\n\n–£—Ä–æ–≤–µ–Ω—å —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞–Ω–∏–π: {callback.data}')      
    await state.update_data(level=callback.data)
    await state.set_state(Trial_EN.aim)
    await callback.answer()
    await callback.message.edit_text('–ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —è–∑—ã–∫?‚ú®', reply_markup=kb.aim)

@router.callback_query(Trial_Ch.level)
async def level(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'{callback.from_user.full_name} ‚ù§Ô∏èüî• —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫\n\n–£—Ä–æ–≤–µ–Ω—å —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞–Ω–∏–π: {callback.data}')
    await state.update_data(level=callback.data)
    await state.set_state(Trial_Ch.aim)
    await callback.answer()
    await callback.message.edit_text('–ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —è–∑—ã–∫?‚ú®', reply_markup=kb.aim)

@router.callback_query(Trial_EN.aim)
async def aim(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–¶–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è: {callback.data}‚ú®')
    await state.update_data(aim=callback.data)
    await state.set_state(Trial_EN.exp)
    await callback.answer()
    await callback.message.edit_text('–ê –±—ã–ª –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞–º–∏üßë‚Äçüè´?', reply_markup=kb.exp)    

@router.callback_query(Trial_Ch.aim)
async def aim(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–¶–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è: {callback.data}‚ú®')
    await state.update_data(aim=callback.data)
    await state.set_state(Trial_Ch.exp)
    await callback.answer()
    await callback.message.edit_text('–ê –±—ã–ª –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞–º–∏üßë‚Äçüè´?', reply_markup=kb.exp)

@router.callback_query(Trial_EN.exp)
async def exp(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–û–ø—ã—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞–º–∏: {callback.data}üßë‚Äçüè´')
    await state.update_data(exp=callback.data)
    await state.set_state(Trial_EN.memory)
    await callback.answer()
    await callback.message.edit_text('–ö–∞–∫ —Ç–µ–±–µ –ª–µ–≥—á–µ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é?üìÄüíæ', reply_markup=kb.memory)

@router.callback_query(Trial_Ch.exp)
async def exp(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–û–ø—ã—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞–º–∏: {callback.data}üßë‚Äçüè´')
    await state.update_data(exp=callback.data)
    await state.set_state(Trial_Ch.memory)
    await callback.answer()
    await callback.message.edit_text('–ö–∞–∫ —Ç–µ–±–µ –ª–µ–≥—á–µ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é?üìÄüíæ', reply_markup=kb.memory)    

@router.callback_query(Trial_EN.memory)
async def memory(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ª—É—á—à–µ: {callback.data}üìÄüíæ')
    await state.update_data(memory=callback.data) 
    await callback.answer()
    await callback.message.edit_text('–û—Ç–ª–∏—á–Ω–æ! –ú—ã —Å —Ç–æ–±–æ–π –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫! –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å —Ç–æ–±–æ–π —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è‚úÖ', reply_markup=kb.to_main)
    await state.clear()
    await callback.bot.send_message(chat_id, f"<a href='tg://user?id={callback.from_user.id}'>‚ô•–ö–õ–ò–ï–ù–¢‚ô•</a>", parse_mode='HTML')
    await callback.bot.send_sticker(chat_id, f'CAACAgIAAxkBAAJGtWXwj6o_NK8AAX86IuLH_L_LFYIs3QACqQgAAm4y2AABGXPOIvVr7iA0BA')


@router.callback_query(Trial_Ch.memory)
async def memory(callback: CallbackQuery, state: FSMContext):
    await callback.bot.send_message(chat_id, f'–ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ª—É—á—à–µ: {callback.data}üìÄüíæ')
    await state.update_data(memory=callback.data)
    await callback.answer()
    await callback.message.edit_text('–û—Ç–ª–∏—á–Ω–æ! –ú—ã —Å —Ç–æ–±–æ–π –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫! –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å —Ç–æ–±–æ–π —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è‚úÖ', reply_markup=kb.to_main)
    await state.clear()
    await callback.bot.send_message(chat_id, f"<a href='tg://user?id={callback.from_user.id}'>‚ô•–ö–õ–ò–ï–ù–¢‚ô•</a>", parse_mode='HTML')
    await callback.bot.send_sticker(chat_id, f'CAACAgIAAxkBAAJGtWXwj6o_NK8AAX86IuLH_L_LFYIs3QACqQgAAm4y2AABGXPOIvVr7iA0BA')

@router.callback_query(F.data == 'present')
async def present(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ù–∞—à–∞ —à–∫–æ–ª–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Ä–æ–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö –≤ online —Ñ–æ—Ä–º–∞—Ç–µ.'
                                     '–ù–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –æ–∫–æ–Ω—á–∏–ª–∏ —è–∑—ã–∫–æ–≤–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏ —É–∂–µ –æ—Ç—Ç–∞—á–∏–ª–∏ –µ–≥–æ —Å –Ω–æ—Å–∏—Ç–µ–ª—è–º–∏.'
                                     '–ú—ã —Å—É—â–µ—Å—Ç–≤—É–µ–º —É–∂–µ –±–æ–ª–µ–µ 6 –ª–µ—Ç, –∏ –æ–±—É—á–∏–ª–∏ –Ω–µ –º–µ–Ω–µ–µ 130 —É—á–µ–Ω–∏–∫–æ–≤.'
                                     '–ü–æ—á–µ–º—É –∂–µ —Ç–∞–∫ –Ω–µ–º–Ω–æ–≥–æ? –û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞—à–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫, –∞ –∏–∑—É—á–∏—Ç—å –µ–≥–æ –Ω–∞ —Ö–æ—Ä–æ—à–µ–º —É—Ä–æ–≤–Ω–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–∏–ª –Ω–∞—à–∏—Ö –¥–æ—Ä–æ–≥–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤'
                                     '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ –¥–ª—è –¥–µ—Ç–µ–π, —Ç–∞–∫ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π —Ä–æ–¥–∏—Ç–µ–ª–µ–πüòÅ\n\n'
                                     'üåü–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:üåü\n'
                                     ' 1. –£–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ–±—á—É–µ–Ω–∏—èüî•\n'
                                     ' 2. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æüìö\n'
                                     ' 3. –í—Å—ë –≤–Ω–∏–º–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –í–∞—Å –∏ –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Çüìà\n'
                                     ' 4. –†–∞–±–æ—Ç–∞–µ–º —Å 7 –ª–µ—Ç –∏ –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏\n'
                                     ' 5. –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ —Å –±–æ–ª—å—à–∏–º –æ–ø—ã—Ç–æ–ºüß†\n'
                                     ' 6. –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞ –∏ –≤–∏–¥–µ–æ‚úÖüîä\n'
                                     ' 7. –°–º–æ—Ç—Ä–∏–º —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ãüì∫\n\n'
                                     '–ü—Ä–æ–≤–æ–¥–∏–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫, —á—Ç–æ–±—ã –≤—ã —Å–º–æ–≥–ª–∏ –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ –æ—â—É—Ç–∏—Ç—å –Ω–∞—Å, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π —Å–µ–º—å–µ‚ô•\n\n –ù–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ –ø–æ–π–¥—ë–º –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫?',reply_markup=kb.select_language)
@router.callback_query(F.data == 'HSK')
async def HSK(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('Â§ßÂÆ∂Â•Ω!\n\n'

                                    '–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç, —è - –õ–∏–Ω –õ–∞–æ—à–∏ , —Ç–≤–æ–π –±—É–¥—É—â–∏–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ üá®üá≥\n\n'

                                        '‚Äî –ü–æ–¥–≥–æ—Ç–æ–≤–ª—é —Ç–µ–±—è –∫ HSK 1-4üíé\n'
                                        '‚Äî –£—á–µ–±–Ω–∏–∫ –ø–æ–∫—É–ø–∞—Ç—å –ù–ï –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Ñ–æ—Ä–º–µ –æ–Ω–ª–∞–π–Ωüë©üèº‚Äçüíª\n'
                                        '‚Äî –£—Ä–æ–∫–∏ –≤–∫–ª—é—á–∞—é—Ç –≤ —Å–µ–±—è –ø–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—Ö, –≥–æ–≤–æ—Ä–µ–Ω–∏–µ, —á—Ç–µ–Ω–∏–µ, –ø–∏—Å—å–º–æ, –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ —ç–∫–∑–∞–º–µ–Ω—É, –∏–≥—Ä—ã –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—èüí´\n'
                                        '‚Äî –ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Microsoft Teams –∏ Edvibe‚≠êÔ∏è\n\n'

                                        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è 1500—Ä / 60 –º–∏–Ω—É—Ç\n'
                                        '–ü–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ - –ë–ï–°–ü–õ–ê–¢–ù–û',reply_markup=kb.CH_HSK)




@router.callback_query(F.data == 'exzm')
async def exzm(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —è–∑—ã–∫ üá®üá≥üá∫üá∏',reply_markup=kb.exzm_language)

@router.callback_query(F.data == 'exzm_en')
async def exzm_en(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ö –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –≥–æ—Ç–æ–≤–∏–º, –æ–∂–∏–¥–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',reply_markup=kb.exzm_en_list)

@router.callback_query(F.data == 'exzm_ch')
async def exzm_ch(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫–∑–∞–º–µ–Ω', reply_markup=kb.exzm_ch_list)

@router.callback_query(F.data == 'contact')
async def contact(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ü—Ä–∏ –ª—é–±–æ–º –≤–æ–ø—Ä–æ—Å–µ –ø–æ –æ–±—É—á–µ–Ω–∏—éüëáüèª\n'
                                     '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—åüë©‚Äçüè´: –õ–∏–Ω –õ–∞–æ—à–∏ @linlaoshixin\n\n'
                                     '–ü—Ä–∏ –ª—é–±–æ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –≤–æ–ø—Ä–æ—Å–µüëáüèª\n'
                                     '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫üõ†: @Paul_Dielly',reply_markup=kb.to_main)

@router.callback_query(F.data == 'about_me')      
async def about_me(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–Ø - –õ–∏–Ω –õ–∞–æ—à–∏üë©‚Äçüè´, —Ç–≤–æ–π –±—É–¥—É—â–∏–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä\n\n'
                                     '–Ø —Ä–∞–±–æ—Ç–∞—é –≤ –∫–æ–º–ø–∞–Ω–∏–∏ Edvibe, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ –≤—Å–µ–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –≤—Å–µ—Öüë©‚Äçüíª\n\n'
                                     '–ó–∞–∫–æ–Ω—á–∏–ª–∞ –ö–§–£ —Å –æ—Ç–ª–∏—á–∏–µ–º –∏ —É—Å–ø–µ—à–Ω–Ω–æ –ø–æ–ª—É—á–∏–ª–∞ –≥—Ä–∞–Ω–¥ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ –ö–∏—Ç–∞–µüá®üá≥\n'
                                     '–ó–∞–Ω–∏–º–∞—é—Å—å –æ–±—É—á–µ–Ω–∏–µ–º –∏ —Ä–∞–±–æ—Ç–∞—é –≤ –∫–æ–º–∞–Ω–¥–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤ üí´',reply_markup=kb.to_main)
    
                                    









